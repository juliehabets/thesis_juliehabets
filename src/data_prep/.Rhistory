)
my_oauth <- spotifyOAuth(app_id = "thesis", client_id = "b57bb630866045ee85b513376a7f8cc5", client_secret = "4db6865daf1f451fb3bc73b577e293b2")
my_oauth <- spotifyOAuth(app_id = "thesis", client_id = "b57bb630866045ee85b513376a7f8cc5", client_secret = "4db6865daf1f451fb3bc73b577e293b2")
my_oauth <- spotifyOAuth(app_id = "thesis", client_id = "b57bb630866045ee85b513376a7f8cc5", client_secret = "4db6865daf1f451fb3bc73b577e293b2")
my_oauth <- spotifyOAuth(app_id = "thesis", client_id = "b57bb630866045ee85b513376a7f8cc5", client_secret = "4db6865daf1f451fb3bc73b577e293b2")
install.packages("installr")
?installr
installing/loading the package: if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr   updateR(F, T, T, F, T, F, T) # install, move, update.package, quit R.
if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr   updateR(F, T, T, F, T, F, T) # install, move, update.package, quit R.
library(installr)
installing/loading the package: if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr   updateR(F, T, T, F, T, F, T) # install, move, update.package, quit R.
iif(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr   updateR(F, T, T, F, T, F, T) # install, move, update.package, quit R.
if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr   updateR(F, T, T, F, T, F, T) # install, move, update.package, quit R.
if(!require(installr)) {
install.packages("installr"); require(installr)}
updateR()
updateR()
library(rtweet)
tweets <-
search_tweets(
"Spotify" + "Gender",
n = 400)
tweets <-
search_tweets(
c("Spotify", "Gender"),
n = 400)
tweets <-
search_tweets(
c("Spotify AND Gender"),
n = 400)
View(tweets)
tweets <-
search_tweets(
c("Spotify AND Gender"),
n = 400,
lang = 'en')
View(tweets)
tweets <-
search_tweets(
c("Spotify AND LGBTQ"),
n = 400,
lang = 'en')
View(tweets)
tweets <-
search_tweets(
"Spotify AND LGBTQ",
n = 400,
lang = 'en')
View(tweets)
tweets <-
search_tweets(
"Spotify AND LGBTQ",
n = 400,
lang = 'en',
include_rts = FALSE)
View(tweets)
tweets <-
search_tweets(
"Spotify AND Gender bias",
n = 400,
lang = 'en',
include_rts = FALSE)
tweets <-
search_tweets(
"Spotify AND genderbias",
n = 400,
lang = 'en',
include_rts = FALSE)
tweets <-
search_tweets(
"Spotify AND Bias",
n = 400,
lang = 'en',
include_rts = FALSE)
View(tweets)
tweets <-
search_tweets(
"Spotify AND gender AND bias",
n = 400,
lang = 'en',
include_rts = FALSE)
tweets <-
search_tweets(
"Spotify AND #blackhistorymonth",
n = 400,
lang = 'en',
include_rts = FALSE)
tweets <-
search_tweets(
"Spotify AND LGBTQ",
n = 400,
lang = 'en',
include_rts = FALSE)
View(tweets)
deezer <- search_tweets(
"Deezer",
n = 50,
lan = 'en'
)
library(rtweet)
deezer <- search_tweets(
"Deezer",
n = 50,
lan = 'en'
)
View(deezer)
?search_tweets
deezer <- search_tweets(
"Deezer",
n = 50,
lang = 'en'
)
View(deezer)
deezer <- search_tweets(
"#Deezer",
n = 50,
lang = 'en'
)
View(deezer)
library(readr)
install.packages("readr")
install.packages("readr")
library(installr)
install.packages("installr")
library(installr)
updateR()
library(readr)
install.packages("readr")
library(dplyr)
install.packages("dplyr")
install.packages("tidyverse")
install.packages("tidyverse")
# Load packages
library(tidyverse)
#Create data folder
dir.create("../../data")
# Input
urls_calender = c("http://data.insideairbnb.com/united-states/co/denver/2022-09-26/data/calendar.csv.gz",
"http://data.insideairbnb.com/ireland/leinster/dublin/2022-09-11/data/calendar.csv.gz",
"http://data.insideairbnb.com/united-kingdom/england/london/2022-09-10/data/calendar.csv.gz",
"http://data.insideairbnb.com/united-states/ca/los-angeles/2022-09-09/data/calendar.csv.gz",
"http://data.insideairbnb.com/italy/lombardy/milan/2022-09-14/data/calendar.csv.gz",
"http://data.insideairbnb.com/germany/bv/munich/2022-06-21/data/calendar.csv.gz",
"http://data.insideairbnb.com/united-states/ny/new-york-city/2022-09-07/data/calendar.csv.gz",
"http://data.insideairbnb.com/france/ile-de-france/paris/2022-06-06/data/calendar.csv.gz",
"http://data.insideairbnb.com/united-states/or/portland/2022-09-16/data/calendar.csv.gz",
"http://data.insideairbnb.com/united-states/ca/san-francisco/2022-09-07/data/calendar.csv.gz")
urls_listing = c("http://data.insideairbnb.com/united-states/co/denver/2022-09-26/data/listings.csv.gz",
"http://data.insideairbnb.com/ireland/leinster/dublin/2022-09-11/data/listings.csv.gz",
"http://data.insideairbnb.com/united-kingdom/england/london/2022-09-10/data/listings.csv.gz",
"http://data.insideairbnb.com/united-states/ca/los-angeles/2022-09-09/data/listings.csv.gz",
"http://data.insideairbnb.com/italy/lombardy/milan/2022-09-14/data/listings.csv.gz",
"http://data.insideairbnb.com/germany/bv/munich/2022-06-21/data/listings.csv.gz",
"http://data.insideairbnb.com/united-states/ny/new-york-city/2022-09-07/data/listings.csv.gz",
"http://data.insideairbnb.com/france/ile-de-france/paris/2022-06-06/data/listings.csv.gz",
"http://data.insideairbnb.com/united-states/or/portland/2022-09-16/data/listings.csv.gz",
"http://data.insideairbnb.com/united-states/ca/san-francisco/2022-09-07/data/listings.csv.gz")
install.packages("readr")
install.packages("readr")
install.packages("data.table")
install.packages("shiny")
install.packages("shinyWidgets")
install.packages("bslib")
install.packages("shinythemes")
install.packages("yaml")
install.packages("readr")
install.packages("tidypredict")
install.packages("broom")
library(data.table)
library(dplyr)
setwd("C:/Users/julie/Documents/thesis/github/src/data_prep")
# load data
#match_tracks_join_full <- fread("../../gen/temp/match_tracks_join_full.csv")
match_tracks_join_inner <- fread("../../gen/temp/match_tracks_join_inner.csv")
match_artists <- fread("../../gen/temp/match_artists.csv")
users_1month <- fread("../../gen/temp/users_1month.csv")
artists_labels <- fread("../../gen/temp/artists_labels.csv")
# clean datasets --> IPV JOIN FULL DOE JOIN INNER
#match_tracks_join_full <- match_tracks_join_full[, -1]
match_tracks_join_inner <- match_tracks_join_inner[, -c(1,2,4)]
names(match_tracks_join_inner)[c(2)] <- c("track_name")
artists_labels$track_name <- tolower(artists_labels$track_name)
artists_labels$artist  <- tolower(artists_labels$artist)
artists_labels$realname <- tolower(artists_labels$realname)
match_artists <- match_artists[-1, -c(1,3)]
names(match_artists)[c(1,2)] <- c("artist","label")
users_1month_trackartist <- users_1month[, -c(1:3, 5:9, 11:17)]
# no duplicate rows
users_1month_trackartist <- users_1month_trackartist[!duplicated(users_1month_trackartist), ]
users_artists <- inner_join(users_1month_trackartist, match_artists, by = "artist")
# clean
users_artists <- users_artists[!duplicated(users_artists), ]
# check NAs
users_artists_na <- users_artists %>% filter(is.na(label))
users_artists_nona <- users_artists %>% filter(!is.na(label))
na_check <- users_artists_na %>% filter(!(artist %in% users_artists_nona$artist))
# in case of multiple labels per song
users_artists_nona <- users_artists_nona %>% group_by(artist, track_name) %>% count(label)
users_artists_nona <- users_artists_nona %>% group_by(artist, track_name) %>% mutate(max_n = max(n))
# keeping only most popular label
users_artists_nona <- users_artists_nona %>% group_by(artist, track_name) %>% filter(n == max_n)
# keeping only 1 label per artist in case when the max counts are the same
users_artists_nona <- users_artists_nona %>% group_by(artist, track_name) %>% slice(n=1)
users_artists_nona <- users_artists_nona[, 1:3]
# bind datasets together
users_artists <- rbind(users_artists_nona, users_artists_na)
users_artists <- users_artists[!duplicated(users_artists), ]
users_tracks <- inner_join(users_1month_trackartist, match_tracks_join_inner, by = "track_name")
# clean
users_tracks <- users_tracks[, -3]
names(users_tracks)[c(2,3)] <- c("artist", "label")
users_tracks <- users_tracks[!duplicated(users_tracks), ]
# check NAs
na <- users_tracks %>% filter(is.na(label))
no_na <- users_tracks %>% filter(!(is.na(label)))
na_check <- na %>% filter(artist %in% no_na$artist)
total_label <- rbind(users_artists, users_tracks)
# find unmatching rows
no_tracks <- anti_join(users_1month_trackartist, match_tracks_join_inner, by = "track_name")
no_tracks_yes_artists <- no_tracks %>% filter(artist %in% match_artists$artist)
no_tracks_yes_artists2 <- no_tracks %>% filter(artist %in% match_tracks_join_inner$artist)
# join together
full_tracks <- rbind(no_tracks_yes_artists, no_tracks_yes_artists2)
full_tracks <- full_tracks[!duplicated(full_tracks), ]
# impute NAs
label_artist_count <- users_tracks %>% group_by(artist) %>% count(label)
label_artist_count <- label_artist_count %>% group_by(artist) %>% mutate(max_n = max(n))
label_artist_count <- label_artist_count %>% group_by(artist) %>% filter(n == max_n)
label_artist_count_1 <- label_artist_count %>% group_by(artist) %>% filter(n == 1) %>% slice(n=1)
label_artist_count_n <- label_artist_count %>% group_by(artist) %>% filter(n >1)
label_artist_count <- rbind(label_artist_count_1, label_artist_count_n)
label_artist_count <- label_artist_count[, 1:2]
full_no_tracks <- merge(full_tracks, label_artist_count, by = "artist")
users_artists_notracks <- inner_join(users_1month_trackartist, full_no_tracks, by = c("track_name", "artist"))
users_tracks <- rbind(users_tracks, users_artists_notracks)
total_label <- rbind(users_tracks, users_artists)
total_label_left <- full_join(users_1month, total_label, by = c("track_name", "artist"))
total_label_left <- left_join(users_1month, total_label, by = c("track_name", "artist"))
View(total_label_left)
total_label_full <- full_join(users_1month, total_label, by = c("track_name", "artist"))
sum(is.na(total_label_left$label))
sum(is.na(total_label_full$label))
total_label <- left_join(users_1month, total_label, by = c("track_name", "artist"))
rm(total_label_full, total_label_left)
View(total_label)
total_label <- total_label[, -c(1,3,5:8, 12, 13, 15:17)]
#write to csv
write.csv(total_label, "../../gen/temp/total_label.csv")
# checking NAs
na <- total_label %>% filter(is.na(label))
length(unique(na$artist))
no_na <- total_label %>% filter(!(is.na(label)))
legend(unique(no_na$artist))
length(unique(no_na$artist))
# real deal
filter_tracks <- na %>% filter(track_name %in% artists_labels$track_name)
filter_tracks$track_name <- tolower(filter_tracks$track_name)
filter_tracks$artist <- tolower(filter_tracks$artist)
filter_tracks <- left_join(filter_tracks, artists_labels, by = c("track_name", "artist"))
#write to csv
write.csv(filter_tracks, "../../gen/temp/filter_tracks.csv")
filter_artists <- filter_tracks %>% filter(is.na(labels))
# real deal
filter_tracks <- na %>% filter(track_name %in% artists_labels$track_name)
filter_tracks <- fread("../../gen/temp/filter_tracks.csv")
View(filter_tracks)
sum(is.na(filter_tracks$label))
sum(is.na(filter_tracks$labels))
# real deal
filter_tracks <- na %>% filter(track_name %in% artists_labels$track_name)
filter_tracks$track_name <- tolower(filter_tracks$track_name)
filter_tracks$artist <- tolower(filter_tracks$artist)
filter_tracks <- left_join(filter_tracks, artists_labels, by = c("track_name"))
filter_tracks <- fread("../../gen/temp/filter_tracks.csv")
filter_artists <- na %>% filter(artist %in% artists_labels$artist)
View(filter_artists)
filter_artists2 <- filter_tracks %>% filter(is.na(labels))
filter_artists2 <- filter_tracks %>% filter(is.na(labels))
filter_artists2 <- filter_tracks # %>% filter(is.na(labels))
filter_artists2 <- filter_tracks %>% filter(is.na(labels))
View(filter_artists2)
filter_artists2 <- filter_artists2%>% filter(is.na(labels))
filter_artists2 <- filter_artists2 %>% filter(artist %in% artists_labels$artist)
filter_trackartist <- filter_tracks %>% filter(is.na(labels))
filter_artists_rn <- na %>% filter(artist %in% artists_labels$realname)
View(filter_artists_rn)
filter_artists <- na %>% filter(artist %in% artists_labels$artist | artist %in% artists_labels$realname)
filter_artists_test <- left_join(filter_artists, artists_labels, by = "artist") #%>% distinct(.keep_all = TRUE)
View(na)
View(users_1month_trackartist)
users_1month_trackartist$track_name <- tolower(users_1month_trackartist$track_name)
users_1month_trackartist$artist  <- tolower(users_1month_trackartist$artist)
# no duplicate rows
users_1month_trackartist <- users_1month_trackartist[!duplicated(users_1month_trackartist), ]
View(match_artists)
match_artists$track_name <- tolower(match_artists$track_name)
match_artists$artist  <- tolower(match_artists$artist)
View(match_tracks_join_inner)
match_artists <- fread("../../gen/temp/match_artists.csv")
match_artists <- match_artists[-1, -c(1,3)]
names(match_artists)[c(1,2)] <- c("artist","label")
match_artists$artist  <- tolower(match_artists$artist)
match_tracks_join_inner$track_name <- tolower(match_tracks_join_inner$track_name)
match_tracks_join_inner$artist  <- tolower(match_tracks_join_inner$artist)
# no duplicate rows
users_1month_trackartist <- users_1month_trackartist[!duplicated(users_1month_trackartist), ]
users_artists <- inner_join(users_1month_trackartist, match_artists, by = "artist")
# clean
users_artists <- users_artists[!duplicated(users_artists), ]
# check NAs
users_artists_na <- users_artists %>% filter(is.na(label))
View(users_artists_na)
# check NAs
#users_artists_na <- users_artists %>% filter(is.na(label))
users_artists_nona <- users_artists %>% filter(!is.na(label))
# in case of multiple labels per song
users_artists_nona <- users_artists_nona %>% group_by(artist, track_name) %>% count(label)
users_artists_nona <- users_artists_nona %>% group_by(artist, track_name) %>% mutate(max_n = max(n))
# keeping only most popular label
users_artists_nona <- users_artists_nona %>% group_by(artist, track_name) %>% filter(n == max_n)
# keeping only 1 label per artist in case when the max counts are the same
users_artists_nona <- users_artists_nona %>% group_by(artist, track_name) %>% slice(n=1)
users_artists_nona <- users_artists_nona[, 1:3]
# bind datasets together
users_artists <- rbind(users_artists_nona, users_artists_na)
View(users_artists)
users_artists <- users_artists[!duplicated(users_artists), ]
View(users_1month_trackartist)
users_tracks <- inner_join(users_1month_trackartist, match_tracks_join_inner, by = "track_name")
# clean
users_tracks <- users_tracks[, -3]
names(users_tracks)[c(2,3)] <- c("artist", "label")
users_tracks <- users_tracks[!duplicated(users_tracks), ]
total_label <- rbind(users_artists, users_tracks)
View(total_label)
sum(is.na(total_label$label))
# find unmatching rows
no_tracks <- anti_join(users_1month_trackartist, match_tracks_join_inner, by = "track_name")
no_tracks_yes_artists <- no_tracks %>% filter(artist %in% match_artists$artist)
no_tracks_yes_artists2 <- no_tracks %>% filter(artist %in% match_tracks_join_inner$artist)
# join together
full_tracks <- rbind(no_tracks_yes_artists, no_tracks_yes_artists2)
full_tracks <- full_tracks[!duplicated(full_tracks), ]
# impute NAs
label_artist_count <- users_tracks %>% group_by(artist) %>% count(label)
label_artist_count <- label_artist_count %>% group_by(artist) %>% mutate(max_n = max(n))
label_artist_count <- label_artist_count %>% group_by(artist) %>% filter(n == max_n)
label_artist_count_1 <- label_artist_count %>% group_by(artist) %>% filter(n == 1) %>% slice(n=1)
label_artist_count_n <- label_artist_count %>% group_by(artist) %>% filter(n >1)
label_artist_count <- rbind(label_artist_count_1, label_artist_count_n)
label_artist_count <- label_artist_count[, 1:2]
full_no_tracks <- merge(full_tracks, label_artist_count, by = "artist")
users_artists_notracks <- inner_join(users_1month_trackartist, full_no_tracks, by = c("track_name", "artist"))
users_tracks <- rbind(users_tracks, users_artists_notracks)
total_label <- rbind(users_tracks, users_artists)
View(users_1month)
users_1month$track_name <- tolower(users_1month$track_name)
users_1month$artist  <- tolower(users_1month$artist)
total_label <- left_join(users_1month, total_label, by = c("track_name", "artist"))
View(total_label)
total_label <- total_label[, -c(1,3,5:8, 12, 13, 15:17)]
sum(is.na(total_label$label))
#write to csv
write.csv(total_label, "../../gen/temp/total_label.csv")
# checking NAs
na <- total_label %>% filter(is.na(label))
no_na <- total_label %>% filter(!(is.na(label)))
length(unique(na$artist))
length(unique(no_na$artist))
# real deal
filter_tracks <- na %>% filter(track_name %in% artists_labels$track_name)
filter_tracks <- left_join(filter_tracks, artists_labels, by = c("track_name", "artist"))
#write to csv
write.csv(filter_tracks, "../../gen/temp/filter_tracks")
# real deal
filter_tracks <- na %>% filter(track_name %in% artists_labels$track_name)
filter_tracks <- fread("../../gen/temp/filter_tracks")
filter_tracks <- filter_tracks[, -c(1, 8:10)]
#write to csv
write.csv(filter_tracks, "../../gen/temp/filter_tracks")
filter_artists <- na %>% filter(artist %in% artists_labels$artist | artist %in% artists_labels$realname)
filter_artists_test <- left_join(filter_artists, artists_labels, by = "artist") #%>% distinct(.keep_all = TRUE)
View(filter_artists_test)
filter_artists <- filter_artists %>% filter(!(artist %in% filter_tracks$artist))
View(filter_artists)
filter_artists_test <- left_join(filter_artists, artists_labels, by = "artist") #%>% distinct(.keep_all = TRUE)
View(filter_artists_test)
filter_artists_test <- filter_artists_test%>% distinct(.keep_all = TRUE)
filter_artists <- left_join(filter_artists, artists_labels, by = "artist") %>% distinct(.keep_all = TRUE)
rm(filter_artists_test)
filter_artists <- filter_artists[, -c(7:9, 11)]
names(filter_artists)[c(2)] <- c("track_name")
sum(is.na(filter_artists@labels))
sum(is.na(filter_artists$labels))
sum(is.na(filter_tracks$labels))
503046+77077
View(no_na)
artists_final <- filter_artists[, c(3,4,7)]
View(artists_final)
artists_final <- artists_final[!duplicated(artists_final), ]
artists_final <- filter_artists[, c(3,4,8)]
artists_final <- artists_final[!duplicated(artists_final), ]
tracks_final <- filter_tracks[, c(3,4,8)]
tracks_final <- tracks_final[!duplicated(tracks_final), ]
View(tracks_final)
no_na_final <- no_na[, c(3,4,7)]
no_na_final <- no_na_final[!duplicated(no_na_final), ]
label_final <- rbind(no_na_final, tracks_final, artists_final)
View(no_na_final)
names(no_na_final)[3] <- "labels"
label_final <- rbind(no_na_final, tracks_final, artists_final)
label_final <- label_final[!duplicated(label_final), ]
View(label_final)
sum(is.na(label_final$labels))
View(users_1month_trackartist)
length(unique(total_label$artist))
length(unique(label_final$artist))
label_final_test <- label_final %>% group_by(artist) %>% count(labels)
View(label_final_test)
label_final_test <- label_final_test %>% group_by(artist) %>% mutate(max_n = max(n))
sum(is.na(label_final_test$labels))
label_final_test <- label_final_test %>% group_by(artist) %>% filter(!(is.na(labels)))
sum(is.na(label_final_test$labels))
label_final_test <- label_final_test %>% group_by(artist) %>% filter(n == max_n)
# write to csv
write.csv(label_final, "../../gen/temp/label_final.csv")
label_artist_count_1 <- label_artist_count %>% group_by(artist) %>% filter(n == 1) %>% slice(n=5)
label_final_test <- label_final_test %>% group_by(artist) %>% filter(n == 1) %>% slice(n=5)
label_final_test_1 <- label_final_test %>% group_by(artist) %>% filter(n == 1) %>% slice(n=5)
# keeping only the first 5 labels
label_final_test <- label_final %>% group_by(artist) %>% count(labels)
label_final_test <- label_final_test %>% group_by(artist) %>% mutate(max_n = max(n))
label_final_test <- label_final_test %>% group_by(artist) %>% filter(!(is.na(labels)))
label_final_test <- label_final_test %>% group_by(artist) %>% filter(n == max_n)
label_final_test_1 <- label_final_test %>% group_by(artist) %>% filter(n == 1) %>% slice(n=5)
label_final_test_n <- label_final_test %>% group_by(artist) %>% filter(n >1)
label_artist_count <- rbind(label_artist_count_1, label_artist_count_n)
rm(label_artist_count)
label_final_test <- rbind(label_final_test_1, label_final_test_n)
View(label_final_test)
View(label_final_test_1)
label_final_test_1 <- label_final_test %>% group_by(artist) %>% filter(n == 1)# %>% slice(n=5)
# keeping only the first 5 labels
label_final_test <- label_final %>% group_by(artist) %>% count(labels)
label_final_test <- label_final_test %>% group_by(artist) %>% mutate(max_n = max(n))
label_final_test <- label_final_test %>% group_by(artist) %>% filter(!(is.na(labels)))
label_final_test <- label_final_test %>% group_by(artist) %>% filter(n == max_n)
label_final_test_1 <- label_final_test %>% group_by(artist) %>% filter(n == 1)# %>% slice(n=5)
label_final_test_1 <- label_final_test %>% group_by(artist) %>% filter(n == 1) %>% slice(n <= 5)
label_final_test_1 <- label_final_test %>% group_by(artist) %>% filter(n == 1) %>% slice(n = 5)
label_final_test_1 <- label_final_test %>% group_by(artist) %>% filter(n == 1)# %>% slice(n = 5)
label_final_test_1 <- label_final_test %>% group_by(artist) %>% filter(n == 1) %>% count(artist) # %>% slice(n = 5)
label_final_test_1 <- label_final_test %>% group_by(artist) %>% filter(n == 1) # %>% slice(n = 5)
label_final_test_1 <- label_final_test %>% count(artist) %>% group_by(artist) %>% filter(n == 1) # %>% slice(n = 5)
label_final_test_1 <- label_final_test  %>% group_by(artist) %>% filter(n == 1) # %>% slice(n = 5)
library(musicMetadata)
View(users_1month)
label_final_final <- label_final[, -1]
View(label_final_final)
# to data
u1m <- left_join(users_1month, label_final_final, by =  "artist")
View(u1m)
sum(is.na(u1m$labels))
na_u1m <- u1m %>% filter(is.na(labels))
View(na_u1m)
length(unique(na_u1m$artist))
length(unique(u1m$artist))
11337/34420
u1m2 <- full_join(users_1month, label_final_final, by =  "artist")
1+1
length(unique(u1m2$artist))
sum(is.na(u1m2$labels))
na_u1m2 <- u1m2 %>% filter(is.na(labels))
length(unique(na_u1m2$artist))
11374/34457
rm(u1m2, na_u1m2)
sum(is.na(total_label$label))
na_label <- total_label %>% filter(is.na(label))
length(unique(total_label$artist))
length(unique(na_label$artist))
14296/34420
View(na_u1m)
na_u1m <- na_u1m[, c(9:10)]
na_u1m <- na_u1m[!duplicated(na_u1m), ]
na_u1m <- u1m %>% filter(is.na(labels))
na_u1m <- na_u1m[, c(9:11)]
na_u1m <- na_u1m[!duplicated(na_u1m), ]
na_u1m$artist_MBID[na_u1m$artist == ""] <- NA
View(na_u1m)
na_u1m$artist_MBID[na_u1m$artist == ""] <- NA
na_u1m <- u1m %>% filter(is.na(labels))
na_u1m <- na_u1m[, c(9:11)]
na_u1m <- na_u1m[!duplicated(na_u1m), ]
na_u1m$artist_MBID[na_u1m$artist_MBID == ""] <- NA
na_u1m$track_MBID[na_u1m$track_MBID == ""] <- NA
na_u1m_artistMBID <- na_u1m %>% filter(!(is.na(art)))
na_u1m_artistMBID <- na_u1m %>% filter(!(is.na(artist_MBID)))
na_u1m_trackMBID <- na_u1m %>% filter(!(is.na(track_MBID)))
write.csv(na_u1m_artistMBID, "../../gen/temp/na_u1m_artistMBID.csv")
write.csv(na_u1m_trackMBID, "../../gen/temp/na_u1m_trackMBID.csv")
#write to csv
write.csv(filter_tracks, "../../gen/temp/filter_tracks")
#write to csv
write.csv(filter_tracks, "../../gen/temp/filter_tracks.csv")
View(na_u1m_artistMBID)
na_u1m_artistMBID <- na_u1m_artistMBID[, -3]
View(na_u1m_trackMBID)
na_u1m_trackMBID <- na_u1m_trackMBID[, -1]
na_u1m_artistMBID <- na_u1m_artistMBID[!duplicated(na_u1m_artistMBID), ]
na_u1m_trackMBID <- na_u1m_trackMBID[!duplicated(na_u1m_trackMBID), ]
write.csv(na_u1m_artistMBID, "../../gen/temp/na_u1m_artistMBID.csv")
write.csv(na_u1m_trackMBID, "../../gen/temp/na_u1m_trackMBID.csv")
