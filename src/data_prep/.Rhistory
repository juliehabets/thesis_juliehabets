n = 50,
lan = 'en'
)
library(rtweet)
deezer <- search_tweets(
"Deezer",
n = 50,
lan = 'en'
)
View(deezer)
?search_tweets
deezer <- search_tweets(
"Deezer",
n = 50,
lang = 'en'
)
View(deezer)
deezer <- search_tweets(
"#Deezer",
n = 50,
lang = 'en'
)
View(deezer)
library(readr)
install.packages("readr")
install.packages("readr")
library(installr)
install.packages("installr")
library(installr)
updateR()
library(readr)
install.packages("readr")
library(dplyr)
install.packages("dplyr")
install.packages("tidyverse")
install.packages("tidyverse")
# Load packages
library(tidyverse)
#Create data folder
dir.create("../../data")
# Input
urls_calender = c("http://data.insideairbnb.com/united-states/co/denver/2022-09-26/data/calendar.csv.gz",
"http://data.insideairbnb.com/ireland/leinster/dublin/2022-09-11/data/calendar.csv.gz",
"http://data.insideairbnb.com/united-kingdom/england/london/2022-09-10/data/calendar.csv.gz",
"http://data.insideairbnb.com/united-states/ca/los-angeles/2022-09-09/data/calendar.csv.gz",
"http://data.insideairbnb.com/italy/lombardy/milan/2022-09-14/data/calendar.csv.gz",
"http://data.insideairbnb.com/germany/bv/munich/2022-06-21/data/calendar.csv.gz",
"http://data.insideairbnb.com/united-states/ny/new-york-city/2022-09-07/data/calendar.csv.gz",
"http://data.insideairbnb.com/france/ile-de-france/paris/2022-06-06/data/calendar.csv.gz",
"http://data.insideairbnb.com/united-states/or/portland/2022-09-16/data/calendar.csv.gz",
"http://data.insideairbnb.com/united-states/ca/san-francisco/2022-09-07/data/calendar.csv.gz")
urls_listing = c("http://data.insideairbnb.com/united-states/co/denver/2022-09-26/data/listings.csv.gz",
"http://data.insideairbnb.com/ireland/leinster/dublin/2022-09-11/data/listings.csv.gz",
"http://data.insideairbnb.com/united-kingdom/england/london/2022-09-10/data/listings.csv.gz",
"http://data.insideairbnb.com/united-states/ca/los-angeles/2022-09-09/data/listings.csv.gz",
"http://data.insideairbnb.com/italy/lombardy/milan/2022-09-14/data/listings.csv.gz",
"http://data.insideairbnb.com/germany/bv/munich/2022-06-21/data/listings.csv.gz",
"http://data.insideairbnb.com/united-states/ny/new-york-city/2022-09-07/data/listings.csv.gz",
"http://data.insideairbnb.com/france/ile-de-france/paris/2022-06-06/data/listings.csv.gz",
"http://data.insideairbnb.com/united-states/or/portland/2022-09-16/data/listings.csv.gz",
"http://data.insideairbnb.com/united-states/ca/san-francisco/2022-09-07/data/listings.csv.gz")
install.packages("readr")
install.packages("readr")
install.packages("data.table")
install.packages("shiny")
install.packages("shinyWidgets")
install.packages("bslib")
install.packages("shinythemes")
install.packages("yaml")
install.packages("readr")
install.packages("tidypredict")
install.packages("broom")
library(data.table)
library(dplyr)
library(lubridate)
library(stringr)
setwd("C:/Users/julie/Documents/thesis/github/src/data_prep")
#load data
userdata_1k <- fread("../../data/userdata_1k.csv")
#remove columns
userdata_1k <- userdata_1k[, -1]
# timestamp to dates
userdata_1k$date <- as.Date(userdata_1k$timestamp)
# dates to total time timestamps
userdata_1k <- userdata_1k %>% group_by(userid) %>% mutate(total_days = max(date)-min(date))
# days numeric
userdata_1k$total_days_num <- as.numeric(userdata_1k$total_days, unit = "days")
# months numeric
userdata_1k$months <- time_length(userdata_1k$total_days, unit = "months")
# rearrange colums
userdata_1k <- userdata_1k[, c(1, 2, 7:10, 3:6)]
users_1month <- userdata_1k %>% filter(date >= "2009-04-01" & date <= "2009-04-30")
rm(userdata_1k)
###############
#CLEAN ARTISTS#
###############
artist_subset <- users_1month[, 8] %>% distinct()
artist_subset$artist <- str_replace_all(artist_subset$artist, "[:digit:][:digit:]\\. Kaliyuga Pro.", "Kaliyuga Pro.")
artist_subset$artist <- str_replace_all(artist_subset$artist, ",  Melodie", "")
artist_subset$artist <- str_replace_all(artist_subset$artist, "/Melodie", "")
artist_subset$artist <- str_replace_all(artist_subset$artist, "- Ost Cd 1", "")
artist_subset$artist <- str_replace_all(artist_subset$artist, "- Ost Cd 2", "")
artist_subset$artist <- str_replace_all(artist_subset$artist, "2paq", "2pac")
artist_subset$artist <- str_replace_all(artist_subset$artist, "8 Mile Soundtrack - ", "")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Act One", "Act 1")
artist_subset$artist <- str_replace_all(artist_subset$artist, " \\(1988\\)", "")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Afro Menduesa", "Afro Medusa")
artist_subset$artist <- str_replace_all(artist_subset$artist, "0Akon", "Akon")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Akon Feat Lil Wayne", "Akon")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Akon Ft. Lil Wayne", "Akon")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Akon Featuring Eminem", "Akon")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Akon Feat Colby O'Donis & Kardinal Offishall", "Akon")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Albert King With Stevie Ray Vaughan", "Albert King")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Albert King & Otis Rush", "Albert King")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Alex Gaudino Feat. Shena", "Alex Gaudino")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Ali Farka Touré With Ry Cooder", "Ali Farka Touré")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Ali Farka Touré & Toumani Diabaté", "Ali Farka Touré")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Allen Ginsberg / Illyb", "Allen Ginsberg")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Allison Crowe", "Allison Crowe (Holiday)")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Alozade And Hollow Point", "Alozade")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Alpha Beat", "Alphabeat")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Altamiro Carrilho & Ronaldo Do Bandolim", "Altamiro")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Alva Noto + Ryuichi Sakamoto", "Alva Noto")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Alva Noto + Opiate", "Alva Noto")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Amanda Seyfried, Ashley Lilley And Rachel Mcdowall", "Amanda Seyfried")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Amanda Seyfried/Dominic Cooper", "Amanda Seyfried")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Dominic Cooper And Amanda Seyfried", "Amanda Seyfried")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Amel Larrieux, Glenn Lewis, Stanley Clarke", "Amel Larrieux")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Amerie Feat.  Fabolous", "Amerie")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Amilcare Poncielli", "Amilcare Ponchielli")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Andrea Demirović", "Andrea Demirovic")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Andrew Spencer Vs. Lazard", "Andrew Spencer") # check if lazard niet label 1 is
artist_subset$artist <- str_replace_all(artist_subset$artist, "Andrew W.K. & B-Roc", "Andrew W.K.")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Andy Hunter", "Andy Hunter°")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Andy Sheppard & Naná Vasconcelos", "Andy Sheppard")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Angelo Badalamenti - Laura'S Theme (Instrumental)", "Angelo Badalamenti")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Anna Maria Jopek + Tomasz Stanko", "Anna Maria Jopek") # check tomasz stanko
artist_subset$artist <- str_replace_all(artist_subset$artist, "Antoine Clamaran Feat. Emily Chick[Www.Zabawa.Org]", "Antoine Clamaran")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Antoine Clamaran & Emily Chick", "Antoine Clamaran")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Apocalyptica Feat Three Days Grace", "Apocalyptica")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Apocalyptica Feat. A. Gontier", "Apocalyptica")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Armin Van Buuren (Feat. Sharon Den Adel)", "Armin Van Buuren")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Armin Van Buuren & Dj Shah (Feat. Chris Jones)", "Armin Van Buuren")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Armin Van Buuren Feat. Sharon Den Adel", "Armin Van Buuren")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Armin Van Buuren F. Ray Wilson", "Armin Van Buuren")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Armin Van Buuren Feat. Jan Vayne", "Armin Van Buuren")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Armin Van Buuren Featuring Ray Wilson", "Armin Van Buuren")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Axwell (By @Ello-)", "Axwell")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Axwell Vs. Kanye West", "Axwell")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Az Rotator", "Az-Rotator")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Baden Powell-Charlie Byrd-Joao Gilberto", "Baden Powell/Charlie Byrd/Joao Gilberto")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Beat Konducta (Aka Madlib)", "Beat Konducta")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Beyoncй", "Beyoncé")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Birdman & Lil' Wayne", "Birdman & Lil Wayne")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Bmx Bandits [With Yeon Gene]", "Bmx Bandits")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Booker T. & The Mgs - Green Onions", "Booker T. & The Mgs")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Bournemouth Symphony Orchestra/Bournemouth Symphony Orchestra", "Bournemouth Symphony Orchestra")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Brandy -[Emb]-", "Brandy")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Bruce Hornsby Feat. Sting", "Bruce Hornsby & Sting")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Buck 65 Remix (Featuring Sufjan Stevens And Serengeti)", "Buck 65")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Buck 65 Remix (Featuring Sufjan Stevens)", "Buck 65")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Butti 49", "Butti-49")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Carter Burwell/Various Artist", "Carter Burwell") #check vanaf hier ff
artist_subset$artist <- str_replace_all(artist_subset$artist, "Cavaleiros Do Zodíaco", "Cavaleiros Do Zodiaco")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Centro-Matic South San Gabriele", "Cavaleiros Do Zodiaco") #south san gabriele is an album of cavaleiros do Zodiaco
View(artist_subset)
# load data
remuneration_artist <- fread("../../gen/temp/artist_remuneration_final.csv")
# load data
remuneration <- fread("../../gen/temp/artist_remuneration_final.csv", select = c(2:5))
View(remuneration_artist)
View(remuneration)
library(data.table)
library(dplyr)
library(musicMetadata)
library(tidyr)
library(stringr)
# load dataset
total_label <- fread("../../gen/temp/users_1month_complete_clean.csv")
# clean
total_label <- total_label[-1, -1]
names(total_label)[c(1,2,3,4,5,6,7)] <- c("userid", "track_name", "artist_MBID", "artist", "track_MBID", "gender", "label")
# subset the non-NA labels so that the NA labels will not be counted as independent labels
labels <- total_label %>% filter(!(is.na(label)))
labels <- unique(labels$label)
# classify labels
classified_labels <- data.frame(label=labels, parent_label = classify_labels(labels, concatenate = T))
# load data
users_1month <- fread("../../gen/temp/users_1month_allmod.csv")
gender_ratio <- fread("../../gen/temp/gender_ratio_artist.csv")
# removing columns for better overview (userid, trackname, artist, gender,label_type, femratio))
users_1month <- users_1month[, c(2, 3, 5, 7, 10, 11)]
users_1month <- users_1month %>% filter(!(is.na(artist)))
# removing columns for better overview (artist & femratio)
gender_ratio <- gender_ratio[, c(2,6)]
users_PR <-
users_1month %>%
group_by(artist) %>%
summarise(n = n()) %>%
mutate(freq = n/sum(n))
total_revenue = length(unique(users_1month$userid))*9.99
users_PR <-
users_PR %>%
mutate(revenue_PR = freq*total_revenue)
users_PR <- merge(users_PR, users_1month, by = "artist")
users_PR <- users_PR[, c(1,3,4)] %>% distinct()
# gini pro rata
gini_PR <- Gini(users_PR$revenue_PR)
# taxing decile 1 & 2
dec12 <- users_AGM %>% filter(decile <= 2)
dec12$revenue_AGM <- dec12$revenue_AGM*0.9
# giving back to decile 3-6
dec3456 <- users_AGM %>% filter(decile %in% (3:6))
rev_cut <- sum(dec12$revenue_AGM)*0.1
# checking unique artists
length(unique(dec3456$artist))
artists_dec3456 <- 13768 # CHECK THIS IF DATASET CHANGES
# extra revenue per artist
extra <- rev_cut/artists_dec3456
dec3456$revenue_AGM <- dec3456$revenue_AGM+extra
# creating dataset decile 7-10
dec78910 <- users_AGM %>% filter(decile %in% (7:10))
# merging datasets together
users_AGM <- rbind(dec12, dec3456, dec78910)
users_AGM <- users_AGM[, -c(2,4)] %>% distinct()
# gini AGM
gini_AGM <- Gini(users_AGM$revenue_AGM)
# lorenz curve AGM
plot(Lc(users_AGM$revenue_AGM), col = "green", lwd = 2, main = "Lorenz Curve AGM model",
xlab = "cumulative % of artists", ylab = "cumulative % of income")
text(x = 0.12, y = 0.9, "Gini = 0.77", cex = 1.1)
# merging all the models together
users_PR <- users_PR[, -2]
artist_remuneration_final <- merge((merge(users_PR, users_UC, by = "artist")), users_AGM, by = "artist")
artist_info <- users_1month[, c(3,5)] %>% distinct()
library(DescTools)
library(tidyr)
library(magrittr)
library(ineq)
# load data
users_1month <- fread("../../gen/temp/users_1month_allmod.csv")
gender_ratio <- fread("../../gen/temp/gender_ratio_artist.csv")
# removing columns for better overview (userid, trackname, artist, gender,label_type, femratio))
users_1month <- users_1month[, c(2, 3, 5, 7, 10, 11)]
users_1month <- users_1month %>% filter(!(is.na(artist)))
# removing columns for better overview (artist & femratio)
gender_ratio <- gender_ratio[, c(2,6)]
users_PR <-
users_1month %>%
group_by(artist) %>%
summarise(n = n()) %>%
mutate(freq = n/sum(n))
total_revenue = length(unique(users_1month$userid))*9.99
users_PR <-
users_PR %>%
mutate(revenue_PR = freq*total_revenue)
users_PR <- merge(users_PR, users_1month, by = "artist")
users_PR <- users_PR[, c(1,3,4)] %>% distinct()
# gini pro rata
gini_PR <- Gini(users_PR$revenue_PR)
# lorenz curve pro rata
plot(Lc(users_PR$revenue_PR), col = "blue", lwd = 2, main = "Lorenz Curve Pro Rata Model",
xlab = "cumulative % of artists", ylab = "cumulative % of income")
text(x = 0.12, y = 0.9, "Gini = 0.83", cex = 1.1)
##############
#USER-CENTRIC#
##############
users_split <- split(users_1month, users_1month$userid)
# revenue per user function
revenue_per_user <- function(l){
df <- as.data.frame(l)
df %>% group_by(df[3]) %>%
summarise(n = n()) %>%
mutate(freq = n/sum(n)) %>%
mutate(revenue_UC = freq * 9.99) %>%
ungroup()
}
# apply to every list in users_UC_split
users_UC_split <- lapply(users_split, revenue_per_user)
# turn list into data frame
unlist_UC_split <- do.call(rbind.data.frame, users_UC_split)
row.names(unlist_UC_split) <- NULL
# aggregating the data to artist level
users_UC <- unlist_UC_split %>% aggregate(revenue_UC ~ artist, sum)
users_UC <- merge(users_UC, users_1month, by = "artist")
users_UC <- users_UC[, -c(3:7)] %>% distinct()
# gini user-centric
gini_UC <- Gini(users_UC$revenue_UC)
# lorenz curve user-centric
plot(Lc(users_UC$revenue_UC), col = "red", lwd = 2, main = "Lorenz Curve User-Centric Model",
xlab = "cumulative % of artists", ylab = "cumulative % of income")
text(x = 0.12, y = 0.9, "Gini = 0.87", cex = 1.1)
users_AGM <- users_PR %>% mutate(decile = ntile(-freq, 10))
names(users_AGM)[3] <- "revenue_AGM"
# taxing decile 1 & 2
dec12 <- users_AGM %>% filter(decile <= 2)
dec12$revenue_AGM <- dec12$revenue_AGM*0.9
# giving back to decile 3-6
dec3456 <- users_AGM %>% filter(decile %in% (3:6))
rev_cut <- sum(dec12$revenue_AGM)*0.1
# checking unique artists
length(unique(dec3456$artist))
artists_dec3456 <- 13768 # CHECK THIS IF DATASET CHANGES
# extra revenue per artist
extra <- rev_cut/artists_dec3456
dec3456$revenue_AGM <- dec3456$revenue_AGM+extra
# creating dataset decile 7-10
dec78910 <- users_AGM %>% filter(decile %in% (7:10))
# merging datasets together
users_AGM <- rbind(dec12, dec3456, dec78910)
users_AGM <- users_AGM[, -c(2,4)] %>% distinct()
# gini AGM
gini_AGM <- Gini(users_AGM$revenue_AGM)
# lorenz curve AGM
plot(Lc(users_AGM$revenue_AGM), col = "green", lwd = 2, main = "Lorenz Curve AGM model",
xlab = "cumulative % of artists", ylab = "cumulative % of income")
text(x = 0.12, y = 0.9, "Gini = 0.77", cex = 1.1)
# merging all the models together
users_PR <- users_PR[, -2]
artist_remuneration_final <- merge((merge(users_PR, users_UC, by = "artist")), users_AGM, by = "artist")
artist_info <- users_1month[, c(3,5)] %>% distinct()
artist_info <- merge(artist_info, gender_ratio, by = "artist")
artist_remuneration_final <- merge(artist_info, artist_remuneration_final, by = "artist")
# overlaying the lorenz curves
plot(Lc(artist_remuneration_final$revenue_PR), col = 'blue')
lines(Lc(artist_remuneration_final$revenue_UC), col = 'red')
lines (Lc(artist_remuneration_final$revenue_AGM), col = 'green')
legend("topleft", c("Pro Rata", "User-Centric", "AGM"), fill = c("blue", "red", "green"))
# write to csv
write.csv(artist_remuneration_final, "../../gen/temp/artist_remuneration_final.csv")
View(artist_remuneration_final)
# load data
remuneration_artist <- fread("../../gen/temp/artist_remuneration_final.csv")
View(remuneration_artist)
# load data
remuneration_artist <- fread("../../gen/temp/artist_remuneration_final.csv", select = c(2:5))
# load data
remuneration_artist <- fread("../../gen/temp/artist_remuneration_final.csv")
# load data
remuneration <- fread("../../gen/temp/artist_remuneration_final.csv", select = c(2:5))
View(remuneration)
# load data
remuneration <- fread("../../gen/temp/artist_remuneration_final.csv", select = c(2:7))
# Gini coefficients
gini_PR <- Gini(remuneration$revenue_PR, na.rm = FALSE)
gini_UC <- Gini(remuneration$revenue_UC, na.rm = FALSE)
gini_AGM <- Gini(remuneration$revenue_AGM, na.rm = FALSE)
View(users_PR)
# merging with factors
users_PR$model <- as.factor(prorata)
# merging with factors
users_PR$model <- as.factor("prorata")
# merging with factors
users_PR$model <- as.factor("PR")
users_UC$model <- as.factor("UC")
users_AGM$model <- as.factor("AGM")
artist_remuneration_factors <- merge((merge(users_PR, users_UC, by = "artist")), users_AGM, by = "artist")
View(artist_remuneration_factors)
View(users_UC)
rm(users_UC_split, unlist_UC_split)
rm(users_split)
rm(artists_dec3456, extra)
rm(labels, rev_cut)
rm(total_revenue, revenue_per_user())
rm(total_revenue, dec12, dec3456, dec78910)
rm(total_label)
artist_remuneration_factors <- rbind(users_PR, users_UC, users_AGM)
View(users_PR)
View(users_AGM)
names(users_PR)[2] <- "revenue"
names(users_UC)[2] <- "revenue"
names(users_AGM)[2] <- "revenue"
artist_remuneration_factors <- rbind(users_PR, users_UC, users_AGM)
wrtie.csv(artist_remuneration_factors, "../../gen/temp/artist_remuneration_factors.csv")
write.csv(artist_remuneration_factors, "../../gen/temp/artist_remuneration_factors.csv")
artist_remuneration_factors <- merge(artist_info, artist_remuneration_factors, by = "artist")
3*34420
write.csv(artist_remuneration_factors, "../../gen/temp/artist_remuneration_factors.csv")
remuneration_factors <- fread("../../gen/temp/artist_remuneration_factors.csv")
View(remuneration_factors)
remuneration_factors <- fread("../../gen/temp/artist_remuneration_factors.csv", select = c(2:6))
?lm
class(remuneration_factors$model)
#
remuneration_factors$model <- as.factor(remuneration_factors$model)
remuneration_factors <- fread("../../gen/temp/artist_remuneration_factors.csv", select = c(2:6))
is.factor(remuneration_factors$model)
#
remuneration_factors$model <- as.factor(remuneration_factors$model)
remuneration_factors <- fread("../../gen/temp/artist_remuneration_factors.csv", select = c(2:6))
#
r <- remuneration_factors
r$model <- as.factor(r$model)
View(r)
rm(r)
average(remuneration_factors$ratiofem)
mean(remuneration_factors$ratiofem)
remuneration_factors <- fread("../../gen/temp/artist_remuneration_factors.csv", select = c(2:6))
#
remuneration_factors$model <- as.factor(remuneration_factors$model)
remuneration_factors$ratiofem
remuneration_factors$ratiofem
is.factor(remuneration_factors$ratiofem)
levels(remuneration_factors$model)
remuneration_factors$label_type <- as.factor(remuneration_factors$label_type)
levels(remuneration_factors$label_type)
remuneration_factors <- fread("../../gen/temp/artist_remuneration_factors.csv", select = c(2:6))
#
remuneration_factors$model <- as.factor(remuneration_factors$model)
# Gini coefficients
gini_PR <- Gini(remuneration$revenue_PR, na.rm = FALSE)
gini_UC <- Gini(remuneration$revenue_UC, na.rm = FALSE)
gini_AGM <- Gini(remuneration$revenue_AGM, na.rm = FALSE)
lr1 <- lm(revenue ~ )
lr1 <- lm(revenue ~ model*label_type*ratiofem)
lr1 <- lm(revenue ~ model*label_type*ratiofem, remuneration_factors)
lr1 <- lm(revenue ~ model*label_type*ratiofem, remuneration_factors); summary(lr1)
lr1 <- lm(revenue ~ model, remuneration_factors); summary(lr1)
lr2 <- lm(revenue ~ model * label_type, remuneration_factors); summary(lr1)
lr2 <- lm(revenue ~ model * label_type, remuneration_factors); summary(lr2)
lr3 <- lm(revenue ~ model * ratiofem, remuneration_factors); summary(lr3)
lr4 <- lm(revenue ~ model * label_type + model * ratiofem, remuneration_factors); summary(lr2)
lr4 <- lm(revenue ~ model * label_type + model * ratiofem, remuneration_factors); summary(lr4)
remuneration_factors$model <- relevel(remuneration_factors$model, "PR")
levels(remuneration_factors$model)
lr1 <- lm(revenue ~ model, remuneration_factors); summary(lr1)
lr2 <- lm(revenue ~ model * label_type, remuneration_factors); summary(lr2)
lr3 <- lm(revenue ~ model * ratiofem, remuneration_factors); summary(lr3)
lr4 <- lm(revenue ~ model * label_type + model * ratiofem, remuneration_factors); summary(lr4)
lr4_res1 <- augment(lr4)
install.packages("broom")
library(broom)
lr4_res1 <- augment(lr4)
ggplot(lr4_res1, aes(.resid)) + geom_histogram(aes(y = ..density..), binwidth = 5) + stat_function(fun = dnorm, args = list(mean = mean(lr4_res1$.resid), sd = sd(lr4_res1$.resid)), color="red", size=2)
library(ggplot2)
ggplot(lr4_res1, aes(.resid)) + geom_histogram(aes(y = ..density..), binwidth = 5) + stat_function(fun = dnorm, args = list(mean = mean(lr4_res1$.resid), sd = sd(lr4_res1$.resid)), color="red", size=2)
print(lr4_res1)
remuneration_factors$revenue_log <- log(remuneration_factors$revenue)
lr4log <- lm(revenue ~ model * label_type + model * ratiofem, remuneration_factors); summary(lr4log)
lr4log <- lm(revenue_log ~ model * label_type + model * ratiofem, remuneration_factors); summary(lr4log)
dnorm(remuneration_factors$revenue, mean(remuneration_factors$revenue), sd(remuneration_factors$revenue))
plot(remuneration_factors$revenue, dnorm(remuneration_factors$revenue, mean(remuneration_factors$revenue), sd(remuneration_factors$revenue)))
plot(remuneration_factors$revenue_log, dnorm(remuneration_factors$revenue_log, mean(remuneration_factors$revenue_log), sd(remuneration_factors$revenue_log)))
# so log, which is logical as revenue cannot be negative and thus, log(x) is a lognormal distribution
plot(remuneration_factors$ratiofem, dnorm(remuneration_factors$ratiofem, mean(remuneration_factors$ratiofem), sd(remuneration_factors$ratiofem)))
remuneration_factors$ratiofem_log <- log(remuneration_factors$ratiofem)
plot(remuneration_factors$ratiofem_log, dnorm(remuneration_factors$ratiofem_log, mean(remuneration_factors$ratiofem_log), sd(remuneration_factors$ratiofem_log)))
plot(remuneration_factors$label_type, dnorm(remuneration_factors$label_type, mean(remuneration_factors$label_type), sd(remuneration_factors$label_type)))
artist_subset$artist <- str_replace_all(artist_subset$artist, c("Disney - Aladdin", "[Disney]", "Disney Channel Stars"), "Disney")
###############
#CLEAN ARTISTS#
###############
artist_subset <- users_1month[, 8] %>% distinct()
#remove columns
userdata_1k <- userdata_1k[, -1]
#load data
userdata_1k <- fread("../../data/userdata_1k.csv")
#remove columns
userdata_1k <- userdata_1k[, -1]
# timestamp to dates
userdata_1k$date <- as.Date(userdata_1k$timestamp)
# dates to total time timestamps
userdata_1k <- userdata_1k %>% group_by(userid) %>% mutate(total_days = max(date)-min(date))
# days numeric
userdata_1k$total_days_num <- as.numeric(userdata_1k$total_days, unit = "days")
# months numeric
userdata_1k$months <- time_length(userdata_1k$total_days, unit = "months")
# rearrange colums
userdata_1k <- userdata_1k[, c(1, 2, 7:10, 3:6)]
users_1month <- userdata_1k %>% filter(date >= "2009-04-01" & date <= "2009-04-30")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Ludachrist", "Ludacris")
users_1month <- userdata_1k %>% filter(date >= "2009-04-01" & date <= "2009-04-30")
###############
#CLEAN ARTISTS#
###############
artist_subset <- users_1month[, 8] %>% distinct()
View(artist_remuneration_factors)
View(artist_remuneration_final)
# load data
remuneration_artist <- fread("../../gen/temp/artist_remuneration_final.csv"))
# load data
remuneration_artist <- fread("../../gen/temp/artist_remuneration_final.csv")
# load data
remuneration <- fread("../../gen/temp/artist_remuneration_final.csv", select = c(2:7))
View(remuneration_artist)
artist_subset$artist <- str_replace_all(artist_subset$artist, "Jamie Long/Horse Shoes", "Jamie Long")
View(artist_subset)
artist_subset$artist <- str_replace_all(artist_subset$artist, "M-Flo♥Bonnie Pink", "M-Flo")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mariah Carey (With Cam'Ron)", "Mariah Carey")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom & Mf Grimm", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom And Dangermouse [The Mouse & The Mask]", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom With Count Bass-D", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom With Mr. Fantastik", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom With Angelika And 4 Ize", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom [The Very Best Of Mf Doom Cd3]", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom & Hassan Chop [Live 2006]", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom Madvillian [Koushik Remixes]", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom, Rza & Think Differently Music", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom As Viktor Vaughn [Mr Clean]", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom & Trunks", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mf Doom And Dangermouse [The Mouse & The Mask]", "Mf Doom")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Mgmt (Remix: Soulwax)", "Mgmt")
artist_subset$artist <- str_replace_all(artist_subset$artist, "\\(Remix: Soulwax]])", "Mgmt")
artist_subset$artist <- str_replace_all(artist_subset$artist, "\\(Remix: Soulwax\\)", "")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Michael Giacchino - Medal Of Honor", "Michael Giacchino")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Paramore   (Estados Unidos)", "Paramore")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Paramore   \\(Estados Unidos\\)", "Paramore")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Paul Whiteman And His Orchestra (Vocal Jack Teagarden)", "Paul Whiteman & His Orchestra")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Ramsey Lewis - The 'In' Crowd", "Ramsey Lewis")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Sesto Senteo", "Sesto Sento")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Silent Hill 2 Cst", "Silent Hill")
artist_subset$artist <- str_replace_all(artist_subset$artist, "Yeah Yeah Yeahs                     - Www.Netosdesalim.Com.Br", "Yeah Yeah Yeahs")
